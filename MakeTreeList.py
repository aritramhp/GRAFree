#!/usr/bin/env python

import Header
from Header import *


##-----------------------------------------------------
''' this function is useful to parse various options for input data processing '''
##-----------------------------------------------------
def parse_options():  
	parser = OptionParser()

	parser.add_option("-D", "--INPDIR", \
		type="string", \
		action="store", \
		dest="INP_DIR", \
		default="", \
		help="path of the input directory containing all species genome in subdirectory")	
	
	parser.add_option("-C", "--CASES", \
		type="string", \
		action="store", \
		dest="CASES", \
		default="", \
		help="Case numbers to be considered for analysis")
		
	opts, args = parser.parse_args()
	return opts, args  


#-------------------------------------------------------------------------------------------------
# This program make the treelist by merging the trees generated by different cases
#-------------------------------------------------------------------------------------------------

def TreeListing(INP_DIR, CASES):
	rootDir = INP_DIR
	#print 'Making Treelist: ', INP_DIR
	
	#CASES = opts.CASES.split('|')
			
	write_flag = 0
	for dirName, subdirList, fileList in os.walk(rootDir):
		if 'tree_1.tre' in fileList:
			treelist = dendropy.TreeList()		
			for case in CASES:
				# tree = dendropy.Tree()
				fname = 'tree_' + case + '.tre'
				if fname in fileList:
					filename = dirName + '/' + fname
					# tree.read_from_path(filename, 'newick')
					tree = Tree.get(path=filename, schema='newick', preserve_underscores=True)
					treelist.append(tree)
					write_flag = 1
				
				#if fname == 'tree_1.tre' or fname == 'tree_2.tre':
					#filename = dirName + '/' + fname
					#tree.read_from_path(filename, 'newick')
					#treelist.append(tree)				
					#write_flag = 1
					
			if write_flag == 1:
				treelist_file = dirName+'/TreeList.newick'
				treelist.write(path=treelist_file,schema='newick',unquoted_underscores=True)
				write_flag = 0
				

#---------------------------------------------------------------------------------------

if __name__=='__main__':
	main()
